    public  ResponseEntity<ApiResponse> rejectTheRecruitmentProcessOnCandidate(Long processId  ){
                Optional<RecruitmentProcess> recruitmentProcess = recruitmentProcessRepository.findById(processId);

                //olması gereken nokta şu rejectledik sonra yeni açınca eski rejectlediğim varsa onu alsın silsin yenisini açsın
                //rejectledik eğer yeni açılmayacaksa rejected olarak kalsın
        System.out.println(recruitmentProcess.ge);

                if (recruitmentProcess.isEmpty() ){
                    return ResponseEntity.status(HttpStatus.NO_CONTENT)
                            .body(ApiResponse.error(
                                    "Process not found ",
                                    null,
                                    HttpStatus.INTERNAL_SERVER_ERROR
                            ));
                }

                else{
                    RecruitmentProcess existingRecruitmentProcess = recruitmentProcess.get();

                    if (existingRecruitmentProcess.getInterviews().isEmpty()){
                        existingRecruitmentProcess.setInterviewProcesses(InterviewProcesses.REJECTED);
                        recruitmentProcessRepository.save(existingRecruitmentProcess);
                        return ResponseEntity.status(HttpStatus.OK)
                                .body(ApiResponse.success(
                                        "Process status changed to rejected no interviews detecdet to delete "
                                ));
                    }
                    interviewRepository.deleteAllByProcessId(processId);

                    return ResponseEntity.status(HttpStatus.OK)
                            .body(ApiResponse.success(
                                    "Process successfully rejected and interviews deleted"
                            ));
                }


    }
